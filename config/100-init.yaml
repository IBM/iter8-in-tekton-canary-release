apiVersion: v1
kind: Service
metadata:
  name: iter8-demo
  namespace: iter8-demo-project
spec:
  type: NodePort
  selector:
    app: demo
  ports:
  - port: 3000
    targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: iter8-demo-v100
  namespace: iter8-demo-project
  labels:
    app: demo
    version: v100
spec:
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: demo
        version: v100
    spec:
      containers:
      - name: demo
        image: YOUR_REGISTRY/iter8-demo:v100
        imagePullPolicy: Always
        ports:
        - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: front
  namespace: iter8-demo-project
spec:
  type: NodePort
  selector:
    app: front
  ports:
  - port: 3000
    targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: front
  namespace: iter8-demo-project
  labels:
    app: front
spec:
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: front
    spec:
      serviceAccountName: default
      containers:
      - name: front
        image: YOUR_REGISTRY/iter8-front:v100
        imagePullPolicy: Always
        ports:
        - containerPort: 3000

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: demo-virtual-service
  namespace: iter8-demo-project  
spec:
  hosts:
  - "*"
  gateways:
  - demo-gateway
  http:  
  - match:
    - uri:
        exact: "/demo"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: front
        port:
          number: 3000

---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: demo-gateway
  namespace: iter8-demo-project
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
